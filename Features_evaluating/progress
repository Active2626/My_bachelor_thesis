------ How to evaluate dataset ------
1. Run bro program with pcap file. It ctreates bro folder with bro logs in the folder where you can find pcap file and binetflow.
2. Next run program Features_evaluating.

In the dataset folder shoulf be at laest:
 - bro folder with bro logs
 - pcap file
 - binetflow

--------------------------------------------------


---10.rijen 2016---
Running:
python main path inefcted_ip1 inefcted_ip2 ... inefcted_ipN

Současnej problém:
Labelovaný pcap data ze sebasových stránek obsahují jen pcap s botnet traffic a normal traffic vůbec neobsahují.
Celá traffic je jen v binetflowu, kde jsou namixovaný normal a botnet (zkrátka klasika).
Vadí, že bro logy jsem udelal jen z pcap, kde je jen botnet traffic?

- Ne nevadí... znamená to teda, že všechny flowy z toho pcap mají label botnet?
    - to nevim.. to over...

Nejvetsi problem:
- z toho 1. datasetu je ipaddresa infikovanýho pc 147.32.84.165. Ale tady ta adresa se pripojuje na spoustu dalsich adres,
ktere jsou labelovaný jako Botnet.. co s tim? jsou to jen potomci té první ip adresy? nebo se malware připojuje na spoustu ip adres?


29.10.2016
----------------------

Mám k dispozici data:
                - pcap file, prý jen s botnet traffic
                - binetflow file, kde je i normal traffic a hl. ty flowy jsou labelovaný...

Co já chci:
        - udělat "model of unit" = {SrcIP, DstIP, DstPort, Protocol}
        - což znamená, že když jeden malware se připojuje k více adresám, každá jiná adresa má jinej "model of unit".
        - Vadí to?
                - asi záleží co chceme detekovat.. zda malware flow nebo malware

Úrovně:
    1. Malware - (malware má mnoho 4-tuples lišící se třeba jen v protokolu nebo DstIpadress)
        2. 4-tuples = {SrcIP, DstIP, DstPort, Protocol} - (má mnoho flows)
            3. flows - (má mnoho features jako size...)

Co ted?:
    - Teď uděláme 4-tuples. Jak?:
                                1. z binetflowu vyberu všechny infikovaný dvojice ipAddress
                                2. pak otevřu conn.log a pudu tvořit 4-tuples

26.11. 2016
----------------------------------

Je nutne se ptat na druhou variaci SrcIP, DstIP?
        - Pokud z lablovanych dat mame urcitou variaci SrcIP a DstIP, pak si myslim, ze neni nutne se ptat zaroven
        na jejich druhou variacu DstIP, SrcIP, ptz pokud je i takova to variace malware (jakoze urcite je), tak by mela
        byt olablovana taky. Budem tem lablum ykratka verit...


Dnesni plan:
    - robeni na featurech
    - grafy


Main.py :
    1) GetInfectedIPs.py : Jde do binetflowu a tam si zjisti, ktery ip adresy(Src, Dst) jsou infikovany.
    2) ProccessLogs.py : Projdeme conn.log a vytváříme z toho 4-tuples a zároveň tvoří dostupné features.
                         Pak projdeme ssl.log, kde dany ssl.log line pridame do daneho 4-tuplu podle ip adres.
    3) Kontrolujeme, zda kazdej 4-tuple ma budto same malware a nebo jenom same normal


---
Co dale ?
Koukni na featury z connlogu a ssllogu... je to mrte zajimavy a zkus vytvorit featuru/y pro handshaky a pro state of connection...
conn.log:
https://www.bro.org/sphinx/scripts/base/protocols/conn/main.bro.html#type-Conn::Info
ssl.log:
https://www.bro.org/sphinx/scripts/base/protocols/ssl/main.bro.html#type-SSL::Info


28.11.2016
--------------------------------------------------
 1. S čim dnes začít ?
        - rozjet na plno grafy
        - začít porovnávat featury

 2. Jak bude porovnávání features vypadat?
        - jednotlivý 4-tuples: červený = malware, modrý = normal
        - jsou 1.dim, 2 dim, 3 dim a chtěl bych n-dim


Feature #1:
osa x: pocet flows
osa y: pocet ssl logu

29.11.2016
--------------------------------------------------
- vylepsil jsem projekt aby to davalo trochu smysl
- vymyslet nejakou dobrou featuru a porovnat

Feature #2:
porovani states_of_connection mezi MALWARE a NORMAL


30.11. 2016
--------------------------------------------------
1. Upravil jsem graf pro "bars" a je to super (y)

Tasks:
    vytvor data_manager ktery projde vsechny

1. 12. 2016
------------------------------------------------
3. Write Readme
4. Send to Sebas


Q: Should I use not working single datasets for my datasets?

7.12
----------------------------------------------
Asking Sebas:
describe processing of feature
normal captures - problem of argus features
more malware captures

20.12.
------------------------------------------------
pypy

-copy binetflow files to dataset ! ok
-run program for a night for some features (y) !

-ask sebas what type of normal the norma is.. just hey router or go to google etc...
- what is C&C
- different sizes in binetflows file


30.12 - 2.1
-------------------------------------------------
---------- LABEL CONN.LOG -----------------------
Challenges:
    - label con.log from binetfflow

To Sebas:
    - not existing tuples
        - for example in experiment7: 83.65.26.253	3	147.32.84.94	1	icmp
        - ipv6 in experiment7: 2002:9320:54b5::9320:54b5 62401 2001:718:2:1611:0:1:0:90 53 udp
    - Flows from experiment 8 have more kinds of labels
        - flow: "2011/08/16 22:37:04.645945,0.000535,tcp,147.32.84.165,1048,  <?>,195.113.232.98,80,FA_R,0,0,2,120,60,flow=Background"
        - line 1577190
        - I change to From-Botnet
    - Flows from experiment 9 have more kinds of labels
        - flow "2011/08/17 17:07:31.095954,0.000000,tcp,147.32.84.209,3942,   ?>,74.117.116.90,80,RA_,0,,1,60,60,flow=Background"
        - flow 2011/08/17 17:09:19.418899,0.000000,tcp,147.32.84.207,2619,   ?>,74.117.116.71,80,RA_,0,,1,60,60,flow=Background
    - To-Normal vs From-Normal... To-botnet is not there.
    - SrcIP -> DstIP is same like DstIP -> SrcIP
    - more cerificate in one ssl log?
    - is one ssl log one ssl handshake?
    - Name of thesis

Result:
    - I checked all binet file labels if they are ok. It means if each 5-tuple has same label (normal, botnet, background)
        Result: Almost all ones are correct expect experiment8 and experiment9. More "To Sebas"...
    - I wanted label conn.log file from binetflow file by 5-tuple, but in conn.log file, there are some 5-tuple which are not in
      binetflow file. So instead of 5-tuples a use just "SrcIP,DstIP" and "DstIP,SrcIP" as a key for labeling. Despite the fact in conn.log
      there are ipv6 which i can not label.

3.1 - 5.1
-------------------------------------------------------------------
---------------- AFTER SUCCESSFULLY PSI EXAM ----------------------
-------------------------------------------------------------------

To me
Histogram to one number
jitter - k rozmělnení bodů v grafu (když máš 10 poitnů na jednech souřadnicích, ono ti to je trochu tak posune.)

What to do:
Ty ted mas conncections 4-tuples pro všechny flowy. Ale mám mít jen takový 4-tuply, který jsou ssl.
Pokud máš nějakej flow, kterej není ssl, ale patří do 4-tuplu, kterej je ssl. tak don woly, je možný že bud to je jen tcp flow,
nebo SF (SYN, FIN). Ale měl bys mít 4-tuply zkládající se jen z ssl.
Proto asi bude nejlepší, když půjdeš nejdřív do ssl filu, tak vytvoříš 4-tuply a pak jen do conn a bude to tam k nim přidávat.
Dále jinak makej na featurách, tam kde nějakej list of něčeho, tak udělej z toho histogram a pak nějak jedno číslo.
Jinak se uvidíme až potom co dáš zkoušku more (y) doufám že ji dáš :D


3.2. 2017
-----------------------------------------------------------------
- V nasem datasete kazdej ssl log vyuziva tcp. Viz Test.py
    - Tudiz koukni jestli to je tak vzdy
- Takze pravdepodobvne budees delat 3-tuples [SrcAddress, DstAddress, DstPort]
    - Zacni nacitat x509, ktery pak potrebuje ssl. A nakonec con.file.


- koukni do x509 jak vyresit ze maj vice uids v jednom filu



------------------------------------------------------
8.2 2017

     1. Rewrite the labels
        From-Botnet = Botnet
        From-Normal = Normal
        or
        (ask sebas for malware IPs a normal IPs and then just go thru conn.log and see SrcIP address and label the conn line)
     2. [Feature 10.] Look at more ports not just 443 but smtps (9443 or 963 or 2525).
ok | 3. [x509 log] First key is certificate!!! The second means, that the first one is signed to second one. Etc.
     4. Think about Features which are not number (connection feature and flow feature)
     5. Certificates number are wierd.
     6. Look if label are bad! Becaouse different between From-X and hust X is very small.

------------------------------------------------------
23.2 2017
in experiment 3, where 147.32.84.165 is infected ip:
2011/08/14 22:10:29.077570,3550.123291,tcp,147.32.84.165,1027,  <?>,38.229.70.20,6667,PA_PA,0,0,354,32846,20360,flow=Background
2011/08/15 09:23:04.505853,2064.563965,tcp,147.32.84.165,1027,  <?>,38.229.70.20,6667,PA_FPA,0,0,51,3921,1146,flow=Background

------------------------ Bad access to Sebas method ----------------
histogram to number:
lets imagine public key length:

128  | 2                0.02                                       0.02 - 0
256  | 8                0.08                                       0.08 - 2
512  | 10               0.1                                        0.1  - 3
1024 | 100   normalize  1       to scale from 0 to 6               1    - 6   = 0236541
2048 | 53               0.53    0.02 0.07 0.08 0.1 0.12 0.53 1     0.53 - 5
4096 | 12               0.12    0    1    2    3   4    5    6     0.12 - 4
8192 | 7                0.07                                       0.07 - 1


128  | 15               0.1                                         0.1   - 0
256  | 18               0.12                                        0.12  - 2
512  | 25               0.17                                        0.17  - 3
1024 | 150   normalize  1       to scale from 0 to 6                1     - 6   = 0236541
2048 | 70               0.47    0.1 0.113 0.12 0.17 0.18 0.47 1     0.47  - 5
4096 | 27               0.18    0     1     2    3   4    5   6     0.18  - 4
8192 | 17               0.113                                       0.113 - 1


------------------------ Good approach by Sebas method ----------------
128  | 2                0.02     0 1 2 3 4 5 6 7 8 9
256  | 8                0.08    |
512  | 10               0.1     |
1024 | 100   normalize  1       |
2048 | 53               0.53    |
4096 | 12               0.12    |
8192 | 7                0.07    |
                                --------------------
                                0                   1

Hoffman coding ?
prime number with sum ?     n^p1 + k^p2
cantor pairing function (or scuki pair function)


1.3. 2017
------------------------------------------
ok | 1. Understand how sebas method works
ok | 2. Create thesis doc
ok | 3. Write which method are for labeling.  --> MakeLabel.py
4. Find best way how to interpret histogram (sebas method, cantor method, new method, prime numbers with modulo)
    a. create som connection where is clear that they are distinct. A look how your algorithm works.
    b. standard deviation  = another method for histogram




------------ Half life method --------------
- each histogram put in more way, so put in